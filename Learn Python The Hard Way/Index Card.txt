ESCAPE		WHAT IT DOES.

\a		ASCII bell (BEL)
\N{name}	Character named name in the Unicode database (Unicode only)
\uxxxx		Character with 16-bit hex value xxxx (Unicode only)
\Uxxxxxxxx	Character with 32-bit hex value xxxxxxxx (Unicode only)
\ooo		Character with octal value ooo
\xhh		Character with hex value hh

python -m pydoc raw_input

.close() -- Closes the file. Like File->Save.. in your editor.
.read -- Reads the contents of the file. You can assign the result to a variable.
.readline -- Reads just one line of a text file.
.truncate -- Empties the file. Watch out if you care about the file.
.write('stuff') -- Writes "stuff" to the file.

Did you start your function definition with def?
Does your function name have only characters and _ (underscore) characters?
Did you put an open parenthesis ( right after the function name?
Did you put your arguments after the parenthesis ( separated by commas?
Did you make each argument unique (meaning no duplicated names)?
Did you put a close parenthesis and a colon ): after the arguments?
Did you indent all lines of code you want in the function four spaces? No more, no less.
Did you "end" your function by going back to writing with no indent (dedenting we call it)?

When you run ("use" or "call") a function, check these things:

Did you call/use/run this function by typing its name?
Did you put the ( character after the name to run it?
Did you put the values you want into the parenthesis separated by commas?
Did you end the function call with a ) character?